aliases:
  default: &default
    docker:
      - image: cimg/node:18.4.0

  enable_pnpm: &enable_pnpm
    run:
      name: 'Using Corepack to install pnpm@7.3.0'
      command: |
        corepack enable
        corepack prepare pnpm@7.3.0 --activate

  install_deps: &install_deps
    run:
      name: 'Installing dependencies and creating symlinks'
      command: pnpm install --frozen-lockfile

  restore_cache: &restore_cache
    restore_cache:
      name: 'Restoring cache'
      keys:
        - project-deps-v8-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ checksum "pnpm-lock.yaml" }}-{{ .Revision }}
        - project-deps-v8-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ checksum "pnpm-lock.yaml" }}
        - project-deps-v8-{{ .Environment.CIRCLE_PROJECT_REPONAME }}

  save_cache: &save_cache
    save_cache:
      name: 'Saving cache'
      key: project-deps-v8-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ checksum "pnpm-lock.yaml" }}-{{ .Revision }}
      paths:
        - node_modules
        - packages/*/node_modules/*
        - workspaces/*/node_modules/*
        - next-docs/node_modules/*

  install_npm_token: &install_npm_token
    run:
      name: 'Setting up private repository NPM access'
      command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc

  docker_build_docs_branch: &docker_build_docs_branch
    run:
      name: 'Building docker docs image from branch'
      command: docker build -f .config/docker/docs/Dockerfile -t heathmont/$CIRCLE_PROJECT_REPONAME:$CIRCLE_BRANCH .

  docker_pull_master_image: &docker_pull_master_image
    run:
      name: 'Pull master image'
      command: docker pull heathmont/$CIRCLE_PROJECT_REPONAME:master

  docker_tag_master_image: &docker_tag_master_image
    run:
      name: 'Tag master image with tag'
      command: docker tag heathmont/$CIRCLE_PROJECT_REPONAME:master heathmont/$CIRCLE_PROJECT_REPONAME:$CIRCLE_TAG

  docker_push_tag: &docker_push_tag
    run:
      name: 'Pushing docker image with tag'
      command: docker push heathmont/$CIRCLE_PROJECT_REPONAME:$CIRCLE_TAG

  docker_login: &docker_login
    run:
      name: 'Logging into docker'
      command: docker login -u $DOCKER_USER -p $DOCKER_PASS

  docker_push_docs_branch: &docker_push_docs_branch
    run:
      name: 'Pushing docker next-docs image with branch name'
      command: docker push heathmont/$CIRCLE_PROJECT_REPONAME:$CIRCLE_BRANCH

  setup_github_ssh: &setup_github_ssh
    run:
      name: 'Setting up github SSH key'
      command: |
        mkdir -p ~/.ssh
        echo "$ROBOT_SSH_KEY" | base64 -d > ~/.ssh/id_rsa.robot && chmod 600 ~/.ssh/id_rsa.robot && ssh-add ~/.ssh/id_rsa.robot
        echo -e "Host github.com\n Hostname github.com\n IdentityFile ~/.ssh/id_rsa.robot\n IdentitiesOnly yes" > ~/.ssh/config
        ssh-keyscan -H github.com >> ~/.ssh/known_hosts

  setup_git_config: &setup_git_config
    run:
      name: 'Setting up git config'
      command: |
        git config user.email "circleci@coingaming.io"
        git config user.name "Deployment Robot"
        git config --global push.default matching

version: 2
jobs:
  dependencies:
    <<: *default
    steps:
      - checkout
      - *restore_cache
      - *install_npm_token
      - *enable_pnpm
      - *install_deps
      - *save_cache
      - persist_to_workspace:
          root: ./
          paths:
            - node_modules
            - docs/node_modules/*
            - next-docs/node_modules/*
            - packages/*/node_modules/*
            - workspaces/*/node_modules/*

  lint:
    <<: *default
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - *enable_pnpm
      - run: pnpm run lint

  test:
    <<: *default
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - *enable_pnpm
      - run: pnpm run next test:ci

  build:
    <<: *default
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - *enable_pnpm
      - run:
          name: Running build
          command: pnpm run build
      - persist_to_workspace:
          root: ./
          paths:
            - packages/*/lib/*
            - workspaces/*/lib/*

  build_docs:
    <<: *default
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - *enable_pnpm
      - run:
          name: Running next build
          command: pnpm run next build
      - persist_to_workspace:
          root: ./
          paths:
            - packages/*/lib/*
            - workspaces/*/lib/*

  build_docs_and_push:
    <<: *default
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - setup_remote_docker:
          version: 20.10.6
          docker_layer_caching: true
      - *docker_build_docs_branch
      - *docker_login
      - *docker_push_docs_branch

  tag_master_image:
    <<: *default
    steps:
      - setup_remote_docker:
          version: 20.10.6
          docker_layer_caching: true
      - *docker_login
      - *docker_pull_master_image
      - *docker_tag_master_image
      - *docker_push_tag

  publish:
    <<: *default
    steps:
      - *setup_github_ssh
      - run: git clone -b master git@github.com:coingaming/$CIRCLE_PROJECT_REPONAME.git .
      - *setup_git_config
      - run: git branch --set-upstream-to=origin/master master
      - run: git pull
      - attach_workspace:
          at: ./
      - *install_npm_token
      - *enable_pnpm
      - run: pnpm run publish
      - run:
          name: 'Update `develop` with `master`'
          command: |
            git pull
            git checkout develop
            git branch --set-upstream-to=origin/develop develop
            git pull
            git merge master
            git push

workflows:
  version: 2
  pull-request:
    jobs:
      - dependencies:
          context: global
      - build:
          context: global
          requires:
            - dependencies
      - test:
          context: global
          requires:
            - dependencies
            - build
      - lint:
          context: global
          requires:
            - dependencies
            - build
      - build_docs:
          context: global
          requires:
            - dependencies
            - build

  build-branch:
    jobs:
      - dependencies:
          context: global
          filters:
            branches:
              only:
                - develop
                - master

      - build:
          context: global
          filters:
            branches:
              only:
                - develop
                - master
          requires:
            - dependencies

      - lint:
          context: global
          filters:
            branches:
              only:
                - develop
                - master
          requires:
            - dependencies
            - build

      - test:
          context: global
          filters:
            branches:
              only:
                - develop
                - master
          requires:
            - dependencies
            - build

      - publish:
          context: global
          filters:
            branches:
              only: master
          requires:
            - dependencies
            - build
            - lint

      - build_docs_and_push:
          context: global
          filters:
            branches:
              only:
                - develop
                - master
          requires:
            - dependencies
            - build
            - lint
            - publish

      - tag_master_image:
          context: global
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
