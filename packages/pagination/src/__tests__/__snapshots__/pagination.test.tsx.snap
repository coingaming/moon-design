// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Pagination renders correctly 1`] = `
.c2 {
  display: inline-block;
  min-height: 1.5rem;
  font-family: inherit;
  font-weight: 500;
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
  border: 1px solid;
  border-color: transparent;
  border-radius: 6.25rem;
  -webkit-transition: background-color 0.2s;
  transition: background-color 0.2s;
  white-space: nowrap;
  color: #FFFFFF;
  background-color: #0CD463;
  font-size: 0.75rem;
  line-height: 1rem;
  height: 2rem;
  padding: 0 1rem;
}

.c2:disabled,
.c2[disabled] {
  cursor: not-allowed;
  opacity: 0.35;
}

.c2.is-hover:not([disabled]),
.c2:hover:not([disabled]) {
  background-color: #19E170;
}

.c2.is-active,
.c2.has-focus,
.c2:active,
.c2:focus {
  background-color: #02C556;
  outline: none;
}

.c3 {
  display: grid;
  height: 100%;
  grid-auto-flow: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  gap: 0.5rem;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c1 {
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c1 > ul {
  list-style: none;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  margin: 0.625rem;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.c1 > ul > li:not(.previous):not(.next) {
  margin: 0 0.125rem;
  border-radius: 50%;
}

.c1 > ul > li:not(.previous):not(.next) > a {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  height: 2rem;
  width: 2rem;
  cursor: pointer;
}

.c1 > ul > li:not(.previous):not(.next).selected {
  background-color: #353C44;
}

.c1 > ul > li:not(.previous):not(.next).selected > a {
  outline: none;
}

.c1 > ul > .previous,
.c1 > ul > .next {
  margin: 0.625rem 0;
  width: 100%;
  text-align: center;
}

.c1 > ul > .disabled button,
.c1 > ul > .disabled button:hover {
  cursor: default;
  color: #8697A2;
  background: none;
  border-color: #31373F;
}

@media (min-width:50em) {
  .c0 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:50em) {
  .c1 {
    width: auto;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:50em) {
  .c1 > ul {
    -webkit-flex-wrap: nowrap;
    -ms-flex-wrap: nowrap;
    flex-wrap: nowrap;
  }
}

@media (min-width:50em) {
  .c1 > ul > .previous {
    margin: 0 0.625rem 0 0;
  }
}

@media (min-width:50em) {
  .c1 > ul > .next {
    margin: 0 0 0 0.625rem;
  }
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    <ul>
      <li
        className="previous"
      >
        <a
          aria-disabled="false"
          aria-label="Previous page"
          onClick={[Function]}
          onKeyPress={[Function]}
          role="button"
          tabIndex="0"
        >
          <button
            className="c2"
            size="xsmall"
          >
            <div
              className="c3"
            >
              Previous
            </div>
          </button>
        </a>
      </li>
      <li>
        <a
          aria-current={null}
          aria-label="Page 1"
          onClick={[Function]}
          onKeyPress={[Function]}
          role="button"
          tabIndex="0"
        >
          1
        </a>
      </li>
      <li
        className="break"
      >
        <a
          onClick={[Function]}
          onKeyPress={[Function]}
          role="button"
          tabIndex="0"
        >
          ...
        </a>
      </li>
      <li>
        <a
          aria-current={null}
          aria-label="Page 9"
          onClick={[Function]}
          onKeyPress={[Function]}
          role="button"
          tabIndex="0"
        >
          9
        </a>
      </li>
      <li
        className="selected"
      >
        <a
          aria-current="page"
          aria-label="Page 10 is your current page"
          onClick={[Function]}
          onKeyPress={[Function]}
          role="button"
          tabIndex="0"
        >
          10
        </a>
      </li>
      <li>
        <a
          aria-current={null}
          aria-label="Page 11"
          onClick={[Function]}
          onKeyPress={[Function]}
          role="button"
          tabIndex="0"
        >
          11
        </a>
      </li>
      <li
        className="break"
      >
        <a
          onClick={[Function]}
          onKeyPress={[Function]}
          role="button"
          tabIndex="0"
        >
          ...
        </a>
      </li>
      <li>
        <a
          aria-current={null}
          aria-label="Page 20"
          onClick={[Function]}
          onKeyPress={[Function]}
          role="button"
          tabIndex="0"
        >
          20
        </a>
      </li>
      <li
        className="next"
      >
        <a
          aria-disabled="false"
          aria-label="Next page"
          onClick={[Function]}
          onKeyPress={[Function]}
          role="button"
          tabIndex="0"
        >
          <button
            className="c2"
            size="xsmall"
          >
            <div
              className="c3"
            >
              Next
            </div>
          </button>
        </a>
      </li>
    </ul>
  </div>
</div>
`;

exports[`Pagination renders correctly with "change page size" section 1`] = `
.c8 {
  vertical-align: middle;
}

.c2 {
  display: inline-block;
  min-height: 1.5rem;
  font-family: inherit;
  font-weight: 500;
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
  border: 1px solid;
  border-color: transparent;
  border-radius: 6.25rem;
  -webkit-transition: background-color 0.2s;
  transition: background-color 0.2s;
  white-space: nowrap;
  color: #FFFFFF;
  background-color: #0CD463;
  font-size: 0.75rem;
  line-height: 1rem;
  height: 2rem;
  padding: 0 1rem;
}

.c2:disabled,
.c2[disabled] {
  cursor: not-allowed;
  opacity: 0.35;
}

.c2.is-hover:not([disabled]),
.c2:hover:not([disabled]) {
  background-color: #19E170;
}

.c2.is-active,
.c2.has-focus,
.c2:active,
.c2:focus {
  background-color: #02C556;
  outline: none;
}

.c6 {
  display: inline-block;
  min-height: 1.5rem;
  font-family: inherit;
  font-weight: 500;
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
  border: 1px solid;
  border-color: transparent;
  border-radius: 6.25rem;
  -webkit-transition: background-color 0.2s;
  transition: background-color 0.2s;
  white-space: nowrap;
  color: #FFFFFF;
  background-color: transparent;
  border: 1px solid #FFFFFF;
  font-size: 0.75rem;
  line-height: 1rem;
  height: 2rem;
  padding: 0 1rem;
}

.c6:disabled,
.c6[disabled] {
  cursor: not-allowed;
  opacity: 0.35;
}

.c6.is-hover:not([disabled]),
.c6:hover:not([disabled]) {
  background-color: #242D38;
}

.c6.is-active,
.c6.has-focus,
.c6:active,
.c6:focus {
  background-color: #11161D;
  outline: none;
}

.c3 {
  display: grid;
  height: 100%;
  grid-auto-flow: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  gap: 0.5rem;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c4 {
  margin: 0.625rem;
}

.c1 {
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c1 > ul {
  list-style: none;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  margin: 0.625rem;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.c1 > ul > li:not(.previous):not(.next) {
  margin: 0 0.125rem;
  border-radius: 50%;
}

.c1 > ul > li:not(.previous):not(.next) > a {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  height: 2rem;
  width: 2rem;
  cursor: pointer;
}

.c1 > ul > li:not(.previous):not(.next).selected {
  background-color: #353C44;
}

.c1 > ul > li:not(.previous):not(.next).selected > a {
  outline: none;
}

.c1 > ul > .previous,
.c1 > ul > .next {
  margin: 0.625rem 0;
  width: 100%;
  text-align: center;
}

.c1 > ul > .disabled button,
.c1 > ul > .disabled button:hover {
  cursor: default;
  color: #8697A2;
  background: none;
  border-color: #31373F;
}

.c5 {
  display: inline-block;
  position: relative;
}

.c7 {
  color: #8697A2;
  background: none;
  border-color: #31373F;
  -webkit-transition: color 0.2s;
  transition: color 0.2s;
}

.c7:hover:not([disabled]),
.c7:focus:not([disabled]) {
  background: none;
  color: #0CD463;
}

@media (min-width:50em) {
  .c0 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:50em) {
  .c1 {
    width: auto;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:50em) {
  .c1 > ul {
    -webkit-flex-wrap: nowrap;
    -ms-flex-wrap: nowrap;
    flex-wrap: nowrap;
  }
}

@media (min-width:50em) {
  .c1 > ul > .previous {
    margin: 0 0.625rem 0 0;
  }
}

@media (min-width:50em) {
  .c1 > ul > .next {
    margin: 0 0 0 0.625rem;
  }
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    <ul>
      <li
        className="previous"
      >
        <a
          aria-disabled="false"
          aria-label="Previous page"
          onClick={[Function]}
          onKeyPress={[Function]}
          role="button"
          tabIndex="0"
        >
          <button
            className="c2"
            size="xsmall"
          >
            <div
              className="c3"
            >
              Previous
            </div>
          </button>
        </a>
      </li>
      <li>
        <a
          aria-current={null}
          aria-label="Page 1"
          onClick={[Function]}
          onKeyPress={[Function]}
          role="button"
          tabIndex="0"
        >
          1
        </a>
      </li>
      <li
        className="break"
      >
        <a
          onClick={[Function]}
          onKeyPress={[Function]}
          role="button"
          tabIndex="0"
        >
          ...
        </a>
      </li>
      <li>
        <a
          aria-current={null}
          aria-label="Page 9"
          onClick={[Function]}
          onKeyPress={[Function]}
          role="button"
          tabIndex="0"
        >
          9
        </a>
      </li>
      <li
        className="selected"
      >
        <a
          aria-current="page"
          aria-label="Page 10 is your current page"
          onClick={[Function]}
          onKeyPress={[Function]}
          role="button"
          tabIndex="0"
        >
          10
        </a>
      </li>
      <li>
        <a
          aria-current={null}
          aria-label="Page 11"
          onClick={[Function]}
          onKeyPress={[Function]}
          role="button"
          tabIndex="0"
        >
          11
        </a>
      </li>
      <li
        className="break"
      >
        <a
          onClick={[Function]}
          onKeyPress={[Function]}
          role="button"
          tabIndex="0"
        >
          ...
        </a>
      </li>
      <li>
        <a
          aria-current={null}
          aria-label="Page 20"
          onClick={[Function]}
          onKeyPress={[Function]}
          role="button"
          tabIndex="0"
        >
          20
        </a>
      </li>
      <li
        className="next"
      >
        <a
          aria-disabled="false"
          aria-label="Next page"
          onClick={[Function]}
          onKeyPress={[Function]}
          role="button"
          tabIndex="0"
        >
          <button
            className="c2"
            size="xsmall"
          >
            <div
              className="c3"
            >
              Next
            </div>
          </button>
        </a>
      </li>
    </ul>
    <div
      className="c4"
    >
       
      <div
        className="c5"
      >
        <button
          className="c6 c7"
          onClick={[Function]}
          size="xsmall"
        >
          <div
            className="c3"
          >
            Rows: 
            20
            <svg
              className="c8"
              fill="none"
              height="1em"
              viewBox="0 0 32 32"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                clipRule="evenodd"
                d="M2.273 9.34a.933.933 0 011.32 0L16 21.747 28.407 9.34a.933.933 0 111.32 1.32L16.66 23.727a.933.933 0 01-1.32 0L2.273 10.66a.933.933 0 010-1.32z"
                fill="currentColor"
                fillRule="evenodd"
              />
            </svg>
          </div>
        </button>
      </div>
       
    </div>
  </div>
</div>
`;

exports[`Pagination renders correctly with "go to page" section 1`] = `
.c8 {
  vertical-align: middle;
}

.c2 {
  display: inline-block;
  min-height: 1.5rem;
  font-family: inherit;
  font-weight: 500;
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
  border: 1px solid;
  border-color: transparent;
  border-radius: 6.25rem;
  -webkit-transition: background-color 0.2s;
  transition: background-color 0.2s;
  white-space: nowrap;
  color: #FFFFFF;
  background-color: #0CD463;
  font-size: 0.75rem;
  line-height: 1rem;
  height: 2rem;
  padding: 0 1rem;
}

.c2:disabled,
.c2[disabled] {
  cursor: not-allowed;
  opacity: 0.35;
}

.c2.is-hover:not([disabled]),
.c2:hover:not([disabled]) {
  background-color: #19E170;
}

.c2.is-active,
.c2.has-focus,
.c2:active,
.c2:focus {
  background-color: #02C556;
  outline: none;
}

.c3 {
  display: grid;
  height: 100%;
  grid-auto-flow: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  gap: 0.5rem;
}

.c6 {
  width: 100%;
  max-width: 100%;
  padding: 0.5rem 1rem;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  font: inherit;
  font-size: 1rem;
  line-height: 1.5;
  color: #FFFFFF;
  background-color: #1A212A;
  border: 1px solid #31373F;
  border-radius: 0.75rem;
  -webkit-transition: border-color 0.2s ease;
  transition: border-color 0.2s ease;
  -webkit-appearance: none;
}

.c6::-webkit-input-placeholder {
  color: #8697A2;
  opacity: 1;
}

.c6::-moz-placeholder {
  color: #8697A2;
  opacity: 1;
}

.c6:-ms-input-placeholder {
  color: #8697A2;
  opacity: 1;
}

.c6::placeholder {
  color: #8697A2;
  opacity: 1;
}

.c6:hover:not(:focus):not([disabled]) {
  border-color: #4C5159;
}

.c6:not(:placeholder-shown):not([type="date"]):invalid {
  border-color: #FF4E64;
}

.c6:invalid,
.c6:-moz-ui-invalid {
  box-shadow: none;
}

.c6:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.c6:focus {
  border-color: #0CD463;
  outline: none;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c4 {
  margin: 0.625rem;
}

.c1 {
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c1 > ul {
  list-style: none;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  margin: 0.625rem;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.c1 > ul > li:not(.previous):not(.next) {
  margin: 0 0.125rem;
  border-radius: 50%;
}

.c1 > ul > li:not(.previous):not(.next) > a {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  height: 2rem;
  width: 2rem;
  cursor: pointer;
}

.c1 > ul > li:not(.previous):not(.next).selected {
  background-color: #353C44;
}

.c1 > ul > li:not(.previous):not(.next).selected > a {
  outline: none;
}

.c1 > ul > .previous,
.c1 > ul > .next {
  margin: 0.625rem 0;
  width: 100%;
  text-align: center;
}

.c1 > ul > .disabled button,
.c1 > ul > .disabled button:hover {
  cursor: default;
  color: #8697A2;
  background: none;
  border-color: #31373F;
}

.c7 {
  width: 2rem;
  height: 2rem;
  border-radius: 50%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-size: 0.75rem;
  padding: 0;
  cursor: pointer;
  border: none;
  background-color: #232A33;
  color: #8697A2;
  -webkit-transition-property: color,background-color;
  transition-property: color,background-color;
  -webkit-transition-duration: 0.2s;
  transition-duration: 0.2s;
}

.c7:hover,
.c7:focus {
  background-color: #0CD463;
  color: #FFFFFF;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  font-size: 0.75rem;
  height: 2rem;
  font-weight: 500;
}

.c5 > input {
  padding: 0.25rem;
  border-radius: 0.25rem;
  width: 2rem;
  height: 2rem;
  margin: 0 0.5rem;
}

.c5 > button {
  height: 2rem;
  width: 2rem;
  padding: 0.25rem;
  background-color: #353C44;
  color: #8697A2;
}

.c5 > button:hover,
.c5 > button:focus {
  background-color: #0CD463;
  color: #fff;
}

@media (min-width:50em) {
  .c0 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:50em) {
  .c1 {
    width: auto;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:50em) {
  .c1 > ul {
    -webkit-flex-wrap: nowrap;
    -ms-flex-wrap: nowrap;
    flex-wrap: nowrap;
  }
}

@media (min-width:50em) {
  .c1 > ul > .previous {
    margin: 0 0.625rem 0 0;
  }
}

@media (min-width:50em) {
  .c1 > ul > .next {
    margin: 0 0 0 0.625rem;
  }
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    <ul>
      <li
        className="previous"
      >
        <a
          aria-disabled="false"
          aria-label="Previous page"
          onClick={[Function]}
          onKeyPress={[Function]}
          role="button"
          tabIndex="0"
        >
          <button
            className="c2"
            size="xsmall"
          >
            <div
              className="c3"
            >
              Previous
            </div>
          </button>
        </a>
      </li>
      <li>
        <a
          aria-current={null}
          aria-label="Page 1"
          onClick={[Function]}
          onKeyPress={[Function]}
          role="button"
          tabIndex="0"
        >
          1
        </a>
      </li>
      <li
        className="break"
      >
        <a
          onClick={[Function]}
          onKeyPress={[Function]}
          role="button"
          tabIndex="0"
        >
          ...
        </a>
      </li>
      <li>
        <a
          aria-current={null}
          aria-label="Page 9"
          onClick={[Function]}
          onKeyPress={[Function]}
          role="button"
          tabIndex="0"
        >
          9
        </a>
      </li>
      <li
        className="selected"
      >
        <a
          aria-current="page"
          aria-label="Page 10 is your current page"
          onClick={[Function]}
          onKeyPress={[Function]}
          role="button"
          tabIndex="0"
        >
          10
        </a>
      </li>
      <li>
        <a
          aria-current={null}
          aria-label="Page 11"
          onClick={[Function]}
          onKeyPress={[Function]}
          role="button"
          tabIndex="0"
        >
          11
        </a>
      </li>
      <li
        className="break"
      >
        <a
          onClick={[Function]}
          onKeyPress={[Function]}
          role="button"
          tabIndex="0"
        >
          ...
        </a>
      </li>
      <li>
        <a
          aria-current={null}
          aria-label="Page 20"
          onClick={[Function]}
          onKeyPress={[Function]}
          role="button"
          tabIndex="0"
        >
          20
        </a>
      </li>
      <li
        className="next"
      >
        <a
          aria-disabled="false"
          aria-label="Next page"
          onClick={[Function]}
          onKeyPress={[Function]}
          role="button"
          tabIndex="0"
        >
          <button
            className="c2"
            size="xsmall"
          >
            <div
              className="c3"
            >
              Next
            </div>
          </button>
        </a>
      </li>
    </ul>
  </div>
  <div
    className="c4"
  >
     
    <form
      className="c5"
      onSubmit={[Function]}
    >
      Go to page
       
      <input
        className="c6"
        onChange={[Function]}
        pattern="\\\\d+"
        placeholder=" "
        type="text"
        value=""
      />
      <button
        className="c7"
        type="submit"
      >
        <svg
          className="c8"
          height="1em"
          viewBox="0 0 12 20"
          width="1em"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M0 2.623L7.014 10 0 17.376 2.5 20 12 10 2.498 0z"
            fill="currentColor"
            fillRule="evenodd"
          />
        </svg>
      </button>
    </form>
     
  </div>
</div>
`;

exports[`Pagination renders correctly with "page size" section 1`] = `
.c3 {
  display: inline-block;
  min-height: 1.5rem;
  font-family: inherit;
  font-weight: 500;
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
  border: 1px solid;
  border-color: transparent;
  border-radius: 6.25rem;
  -webkit-transition: background-color 0.2s;
  transition: background-color 0.2s;
  white-space: nowrap;
  color: #FFFFFF;
  background-color: #0CD463;
  font-size: 0.75rem;
  line-height: 1rem;
  height: 2rem;
  padding: 0 1rem;
}

.c3:disabled,
.c3[disabled] {
  cursor: not-allowed;
  opacity: 0.35;
}

.c3.is-hover:not([disabled]),
.c3:hover:not([disabled]) {
  background-color: #19E170;
}

.c3.is-active,
.c3.has-focus,
.c3:active,
.c3:focus {
  background-color: #02C556;
  outline: none;
}

.c4 {
  display: grid;
  height: 100%;
  grid-auto-flow: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  gap: 0.5rem;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c1 {
  margin: 0.625rem;
}

.c2 {
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c2 > ul {
  list-style: none;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  margin: 0.625rem;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.c2 > ul > li:not(.previous):not(.next) {
  margin: 0 0.125rem;
  border-radius: 50%;
}

.c2 > ul > li:not(.previous):not(.next) > a {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  height: 2rem;
  width: 2rem;
  cursor: pointer;
}

.c2 > ul > li:not(.previous):not(.next).selected {
  background-color: #353C44;
}

.c2 > ul > li:not(.previous):not(.next).selected > a {
  outline: none;
}

.c2 > ul > .previous,
.c2 > ul > .next {
  margin: 0.625rem 0;
  width: 100%;
  text-align: center;
}

.c2 > ul > .disabled button,
.c2 > ul > .disabled button:hover {
  cursor: default;
  color: #8697A2;
  background: none;
  border-color: #31373F;
}

@media (min-width:50em) {
  .c0 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:50em) {
  .c2 {
    width: auto;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:50em) {
  .c2 > ul {
    -webkit-flex-wrap: nowrap;
    -ms-flex-wrap: nowrap;
    flex-wrap: nowrap;
  }
}

@media (min-width:50em) {
  .c2 > ul > .previous {
    margin: 0 0.625rem 0 0;
  }
}

@media (min-width:50em) {
  .c2 > ul > .next {
    margin: 0 0 0 0.625rem;
  }
}

<div
  className="c0"
>
  <div
    className="c1"
  >
     
    Showing 1 – 10 
    <span>
      of 100
    </span>
     
  </div>
  <div
    className="c2"
  >
    <ul>
      <li
        className="previous"
      >
        <a
          aria-disabled="false"
          aria-label="Previous page"
          onClick={[Function]}
          onKeyPress={[Function]}
          role="button"
          tabIndex="0"
        >
          <button
            className="c3"
            size="xsmall"
          >
            <div
              className="c4"
            >
              Previous
            </div>
          </button>
        </a>
      </li>
      <li>
        <a
          aria-current={null}
          aria-label="Page 1"
          onClick={[Function]}
          onKeyPress={[Function]}
          role="button"
          tabIndex="0"
        >
          1
        </a>
      </li>
      <li
        className="break"
      >
        <a
          onClick={[Function]}
          onKeyPress={[Function]}
          role="button"
          tabIndex="0"
        >
          ...
        </a>
      </li>
      <li>
        <a
          aria-current={null}
          aria-label="Page 9"
          onClick={[Function]}
          onKeyPress={[Function]}
          role="button"
          tabIndex="0"
        >
          9
        </a>
      </li>
      <li
        className="selected"
      >
        <a
          aria-current="page"
          aria-label="Page 10 is your current page"
          onClick={[Function]}
          onKeyPress={[Function]}
          role="button"
          tabIndex="0"
        >
          10
        </a>
      </li>
      <li>
        <a
          aria-current={null}
          aria-label="Page 11"
          onClick={[Function]}
          onKeyPress={[Function]}
          role="button"
          tabIndex="0"
        >
          11
        </a>
      </li>
      <li
        className="break"
      >
        <a
          onClick={[Function]}
          onKeyPress={[Function]}
          role="button"
          tabIndex="0"
        >
          ...
        </a>
      </li>
      <li>
        <a
          aria-current={null}
          aria-label="Page 20"
          onClick={[Function]}
          onKeyPress={[Function]}
          role="button"
          tabIndex="0"
        >
          20
        </a>
      </li>
      <li
        className="next"
      >
        <a
          aria-disabled="false"
          aria-label="Next page"
          onClick={[Function]}
          onKeyPress={[Function]}
          role="button"
          tabIndex="0"
        >
          <button
            className="c3"
            size="xsmall"
          >
            <div
              className="c4"
            >
              Next
            </div>
          </button>
        </a>
      </li>
    </ul>
  </div>
</div>
`;
