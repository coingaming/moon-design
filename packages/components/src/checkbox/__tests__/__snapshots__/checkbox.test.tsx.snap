// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Checkbox renders as disabled 1`] = `
.c0 {
  display: inline-block;
  position: relative;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 1rem;
}

.c2 {
  display: inline-block;
  margin-left: 1.75rem;
  color: #8697A2;
}

.c2::before,
.c2::after {
  content: "";
  position: absolute;
  width: 1rem;
  height: 1rem;
  top: 0.0625rem;
  left: 0;
  -webkit-transition-duration: 0.2s;
  transition-duration: 0.2s;
  -webkit-transition-timing-function: ease;
  transition-timing-function: ease;
}

.c2::before {
  background-color: #4D5359;
  border-radius: 50%;
  opacity: 0;
  -webkit-transform: none;
  -ms-transform: none;
  transform: none;
  -webkit-transition-property: background-color,-webkit-transform,opacity;
  -webkit-transition-property: background-color,transform,opacity;
  transition-property: background-color,transform,opacity;
  will-change: transform,opacity;
}

.c2::after {
  border: 1px solid #31373F;
  border-radius: 0.25rem;
  background-color: transparent;
  -webkit-transition-property: border-color;
  transition-property: border-color;
}

.c1 {
  border: 0;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.c1:hover:enabled + span::before,
.c1:focus:enabled + span::before {
  opacity: 0.2;
  -webkit-transform: scale(2);
  -ms-transform: scale(2);
  transform: scale(2);
}

.c1:hover:enabled:checked + span::before,
.c1:focus:enabled:checked + span::before {
  opacity: 0.1;
  background-color: #9EEFC1;
}

.c1:hover:enabled:not(:checked) + span::after,
.c1:focus:enabled:not(:checked) + span::after {
  border-color: #4D5359;
}

.c1:checked + span::after {
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='100%25' height='auto' fill='none' viewBox='0 0 20 14'%3e%3cpath fill='%230CD664' fill-rule='evenodd' d='M18 0c-.56 0-1.06.22-1.42.58L8 9.18l-4.58-4.6C3.06 4.22 2.56 4 2 4 .9 4 0 4.9 0 6c0 .56.22 1.06.58 1.42l6 6c.36.36.86.58 1.42.58.56 0 1.06-.22 1.42-.58l10-10c.36-.36.58-.86.58-1.42 0-1.1-.9-2-2-2z' clip-rule='evenodd'%3e%3c/path%3e%3c/svg%3e");
  background-repeat: no-repeat;
  background-position: center;
  background-size: 0.625rem;
  border-color: #0CD664;
}

.c1[disabled] + span {
  color: #353C44;
  cursor: not-allowed;
}

.c1[disabled] + span::after {
  border-color: #353C44;
}

<label
  className="c0"
  htmlFor="Checkbox-Test2"
>
  <input
    className="c1"
    disabled={true}
    id="Checkbox-Test2"
    type="checkbox"
  />
  <span
    className="c2"
  >
    I agree to the Terms & Conditions
  </span>
</label>
`;

exports[`Checkbox renders by default 1`] = `
.c0 {
  display: inline-block;
  position: relative;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 1rem;
}

.c2 {
  display: inline-block;
  margin-left: 1.75rem;
  color: #8697A2;
}

.c2::before,
.c2::after {
  content: "";
  position: absolute;
  width: 1rem;
  height: 1rem;
  top: 0.0625rem;
  left: 0;
  -webkit-transition-duration: 0.2s;
  transition-duration: 0.2s;
  -webkit-transition-timing-function: ease;
  transition-timing-function: ease;
}

.c2::before {
  background-color: #4D5359;
  border-radius: 50%;
  opacity: 0;
  -webkit-transform: none;
  -ms-transform: none;
  transform: none;
  -webkit-transition-property: background-color,-webkit-transform,opacity;
  -webkit-transition-property: background-color,transform,opacity;
  transition-property: background-color,transform,opacity;
  will-change: transform,opacity;
}

.c2::after {
  border: 1px solid #31373F;
  border-radius: 0.25rem;
  background-color: transparent;
  -webkit-transition-property: border-color;
  transition-property: border-color;
}

.c1 {
  border: 0;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.c1:hover:enabled + span::before,
.c1:focus:enabled + span::before {
  opacity: 0.2;
  -webkit-transform: scale(2);
  -ms-transform: scale(2);
  transform: scale(2);
}

.c1:hover:enabled:checked + span::before,
.c1:focus:enabled:checked + span::before {
  opacity: 0.1;
  background-color: #9EEFC1;
}

.c1:hover:enabled:not(:checked) + span::after,
.c1:focus:enabled:not(:checked) + span::after {
  border-color: #4D5359;
}

.c1:checked + span::after {
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='100%25' height='auto' fill='none' viewBox='0 0 20 14'%3e%3cpath fill='%230CD664' fill-rule='evenodd' d='M18 0c-.56 0-1.06.22-1.42.58L8 9.18l-4.58-4.6C3.06 4.22 2.56 4 2 4 .9 4 0 4.9 0 6c0 .56.22 1.06.58 1.42l6 6c.36.36.86.58 1.42.58.56 0 1.06-.22 1.42-.58l10-10c.36-.36.58-.86.58-1.42 0-1.1-.9-2-2-2z' clip-rule='evenodd'%3e%3c/path%3e%3c/svg%3e");
  background-repeat: no-repeat;
  background-position: center;
  background-size: 0.625rem;
  border-color: #0CD664;
}

.c1[disabled] + span {
  color: #353C44;
  cursor: not-allowed;
}

.c1[disabled] + span::after {
  border-color: #353C44;
}

<label
  className="c0"
  htmlFor="Checkbox-Test1"
>
  <input
    className="c1"
    disabled={false}
    id="Checkbox-Test1"
    type="checkbox"
  />
  <span
    className="c2"
  >
    I agree to the Terms & Conditions
  </span>
</label>
`;

exports[`Checkbox renders label with HTML 1`] = `
.c0 {
  display: inline-block;
  position: relative;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 1rem;
}

.c2 {
  display: inline-block;
  margin-left: 1.75rem;
  color: #8697A2;
}

.c2::before,
.c2::after {
  content: "";
  position: absolute;
  width: 1rem;
  height: 1rem;
  top: 0.0625rem;
  left: 0;
  -webkit-transition-duration: 0.2s;
  transition-duration: 0.2s;
  -webkit-transition-timing-function: ease;
  transition-timing-function: ease;
}

.c2::before {
  background-color: #4D5359;
  border-radius: 50%;
  opacity: 0;
  -webkit-transform: none;
  -ms-transform: none;
  transform: none;
  -webkit-transition-property: background-color,-webkit-transform,opacity;
  -webkit-transition-property: background-color,transform,opacity;
  transition-property: background-color,transform,opacity;
  will-change: transform,opacity;
}

.c2::after {
  border: 1px solid #31373F;
  border-radius: 0.25rem;
  background-color: transparent;
  -webkit-transition-property: border-color;
  transition-property: border-color;
}

.c1 {
  border: 0;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.c1:hover:enabled + span::before,
.c1:focus:enabled + span::before {
  opacity: 0.2;
  -webkit-transform: scale(2);
  -ms-transform: scale(2);
  transform: scale(2);
}

.c1:hover:enabled:checked + span::before,
.c1:focus:enabled:checked + span::before {
  opacity: 0.1;
  background-color: #9EEFC1;
}

.c1:hover:enabled:not(:checked) + span::after,
.c1:focus:enabled:not(:checked) + span::after {
  border-color: #4D5359;
}

.c1:checked + span::after {
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='100%25' height='auto' fill='none' viewBox='0 0 20 14'%3e%3cpath fill='%230CD664' fill-rule='evenodd' d='M18 0c-.56 0-1.06.22-1.42.58L8 9.18l-4.58-4.6C3.06 4.22 2.56 4 2 4 .9 4 0 4.9 0 6c0 .56.22 1.06.58 1.42l6 6c.36.36.86.58 1.42.58.56 0 1.06-.22 1.42-.58l10-10c.36-.36.58-.86.58-1.42 0-1.1-.9-2-2-2z' clip-rule='evenodd'%3e%3c/path%3e%3c/svg%3e");
  background-repeat: no-repeat;
  background-position: center;
  background-size: 0.625rem;
  border-color: #0CD664;
}

.c1[disabled] + span {
  color: #353C44;
  cursor: not-allowed;
}

.c1[disabled] + span::after {
  border-color: #353C44;
}

<label
  className="c0"
  htmlFor="Checkbox-Test4"
>
  <input
    className="c1"
    disabled={false}
    id="Checkbox-Test4"
    type="checkbox"
  />
  <span
    className="c2"
  >
    <span>
      This is a label with a 
      <a
        href="#test"
      >
        link
      </a>
      .
    </span>
  </span>
</label>
`;

exports[`Checkbox renders with hidden aria-label 1`] = `
.c0 {
  display: inline-block;
  position: relative;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 1rem;
}

.c2 {
  display: inline-block;
  margin-left: 1.75rem;
  color: #8697A2;
}

.c2::before,
.c2::after {
  content: "";
  position: absolute;
  width: 1rem;
  height: 1rem;
  top: 0.0625rem;
  left: 0;
  -webkit-transition-duration: 0.2s;
  transition-duration: 0.2s;
  -webkit-transition-timing-function: ease;
  transition-timing-function: ease;
}

.c2::before {
  background-color: #4D5359;
  border-radius: 50%;
  opacity: 0;
  -webkit-transform: none;
  -ms-transform: none;
  transform: none;
  -webkit-transition-property: background-color,-webkit-transform,opacity;
  -webkit-transition-property: background-color,transform,opacity;
  transition-property: background-color,transform,opacity;
  will-change: transform,opacity;
}

.c2::after {
  border: 1px solid #31373F;
  border-radius: 0.25rem;
  background-color: transparent;
  -webkit-transition-property: border-color;
  transition-property: border-color;
}

.c1 {
  border: 0;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.c1:hover:enabled + span::before,
.c1:focus:enabled + span::before {
  opacity: 0.2;
  -webkit-transform: scale(2);
  -ms-transform: scale(2);
  transform: scale(2);
}

.c1:hover:enabled:checked + span::before,
.c1:focus:enabled:checked + span::before {
  opacity: 0.1;
  background-color: #9EEFC1;
}

.c1:hover:enabled:not(:checked) + span::after,
.c1:focus:enabled:not(:checked) + span::after {
  border-color: #4D5359;
}

.c1:checked + span::after {
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='100%25' height='auto' fill='none' viewBox='0 0 20 14'%3e%3cpath fill='%230CD664' fill-rule='evenodd' d='M18 0c-.56 0-1.06.22-1.42.58L8 9.18l-4.58-4.6C3.06 4.22 2.56 4 2 4 .9 4 0 4.9 0 6c0 .56.22 1.06.58 1.42l6 6c.36.36.86.58 1.42.58.56 0 1.06-.22 1.42-.58l10-10c.36-.36.58-.86.58-1.42 0-1.1-.9-2-2-2z' clip-rule='evenodd'%3e%3c/path%3e%3c/svg%3e");
  background-repeat: no-repeat;
  background-position: center;
  background-size: 0.625rem;
  border-color: #0CD664;
}

.c1[disabled] + span {
  color: #353C44;
  cursor: not-allowed;
}

.c1[disabled] + span::after {
  border-color: #353C44;
}

<label
  className="c0"
  htmlFor="Checkbox-Test3"
>
  <input
    aria-label="This label is hidden"
    className="c1"
    disabled={false}
    id="Checkbox-Test3"
    type="checkbox"
  />
  <span
    className="c2"
  />
</label>
`;
